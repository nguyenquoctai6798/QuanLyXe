{"ast":null,"code":"var _jsxFileName = \"/home/quoctai/Tai/LSH (copy)/Client/src/component/backupDatabase.js\";\nimport React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';\nimport './backupDatabase.css';\n\nconst Papa = require('papaparse');\n\nvar FileSaver = require('file-saver');\n\nconst readText = file => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.readAsText(file);\n\n  reader.onload = () => resolve(reader.result);\n\n  reader.onerror = reject;\n});\n\nclass BackupDatabase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.exPort = () => {\n      let link = 'http://localhost:8000/getAllDatabase';\n      axios.post(link).then(result => {\n        this.setState({\n          lisAutoMarker: result.data.listAutoMarker\n        });\n        this.setState({\n          lisSeat: result.data.listSeat\n        });\n        this.setState({\n          listBus: result.data.listBus\n        });\n        let lisAutoMarkerCsv = Papa.unparse(this.state.lisAutoMarker);\n        let lisBusCsv = Papa.unparse(this.state.listBus);\n        let listSeatCsv = Papa.unparse(this.state.lisSeat); // FileSaver.saveAs(new Blob([lisBusCsv], { type: 'application/octet-stream' }), 'busdb.csv')\n\n        FileSaver.saveAs(new Blob([lisAutoMarkerCsv], {\n          type: 'application/octet-stream'\n        }), 'automarkerdb.csv'); // FileSaver.saveAs(new Blob([listSeatCsv], { type: 'application/octet-stream' }), 'seatdb.csv')\n      });\n    };\n\n    this.handleOnDrop = async (file, rejectedFiles) => {\n      let result = await readText(file[0]);\n      console.log(file[0].name);\n      console.log('result', result);\n      let json = Papa.parse(result);\n      console.log(json.data[0][2]);\n    };\n\n    this.state = {\n      lisAutoMarker: [],\n      listBus: [],\n      lisSeat: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Backup Database\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"button\",\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Dropzone, {\n      className: \"col-sm-2\",\n      onDrop: this.handleOnDrop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Import Database\")))), React.createElement(\"div\", {\n      className: \"col-sm-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-success col-sm-2\",\n      onClick: this.exPort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" Export Database \"), React.createElement(\"div\", {\n      className: \"col-sm-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default BackupDatabase;","map":{"version":3,"sources":["/home/quoctai/Tai/LSH (copy)/Client/src/component/backupDatabase.js"],"names":["React","Component","Dropzone","axios","Papa","require","FileSaver","readText","file","Promise","resolve","reject","reader","FileReader","readAsText","onload","result","onerror","BackupDatabase","constructor","props","exPort","link","post","then","setState","lisAutoMarker","data","listAutoMarker","lisSeat","listSeat","listBus","lisAutoMarkerCsv","unparse","state","lisBusCsv","listSeatCsv","saveAs","Blob","type","handleOnDrop","rejectedFiles","console","log","name","json","parse","render","getRootProps","getInputProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,WAAD,CAApB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,YAAD,CAAvB;;AAEA,MAAME,QAAQ,GAAGC,IAAI,IACnB,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/B,QAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,EAAAA,MAAM,CAACE,UAAP,CAAkBN,IAAlB;;AAEAI,EAAAA,MAAM,CAACG,MAAP,GAAgB,MAAML,OAAO,CAACE,MAAM,CAACI,MAAR,CAA7B;;AACAJ,EAAAA,MAAM,CAACK,OAAP,GAAiBN,MAAjB;AACD,CAND,CADF;;AASA,MAAMO,cAAN,SAA6BjB,SAA7B,CAAuC;AACrCkB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,MATmB,GASV,MAAM;AACb,UAAIC,IAAI,GAAG,sCAAX;AACAnB,MAAAA,KAAK,CAACoB,IAAN,CAAWD,IAAX,EAAiBE,IAAjB,CAAsBR,MAAM,IAAI;AAC9B,aAAKS,QAAL,CAAc;AAAEC,UAAAA,aAAa,EAAEV,MAAM,CAACW,IAAP,CAAYC;AAA7B,SAAd;AACA,aAAKH,QAAL,CAAc;AAAEI,UAAAA,OAAO,EAAEb,MAAM,CAACW,IAAP,CAAYG;AAAvB,SAAd;AACA,aAAKL,QAAL,CAAc;AAAEM,UAAAA,OAAO,EAAEf,MAAM,CAACW,IAAP,CAAYI;AAAvB,SAAd;AACA,YAAIC,gBAAgB,GAAG5B,IAAI,CAAC6B,OAAL,CAAa,KAAKC,KAAL,CAAWR,aAAxB,CAAvB;AACA,YAAIS,SAAS,GAAG/B,IAAI,CAAC6B,OAAL,CAAa,KAAKC,KAAL,CAAWH,OAAxB,CAAhB;AACA,YAAIK,WAAW,GAAGhC,IAAI,CAAC6B,OAAL,CAAa,KAAKC,KAAL,CAAWL,OAAxB,CAAlB,CAN8B,CAO9B;;AACAvB,QAAAA,SAAS,CAAC+B,MAAV,CAAiB,IAAIC,IAAJ,CAAS,CAACN,gBAAD,CAAT,EAA6B;AAAEO,UAAAA,IAAI,EAAE;AAAR,SAA7B,CAAjB,EAAqF,kBAArF,EAR8B,CAS9B;AACD,OAVD;AAWD,KAtBkB;;AAAA,SAyBnBC,YAzBmB,GAyBJ,OAAOhC,IAAP,EAAaiC,aAAb,KAA+B;AAC5C,UAAIzB,MAAM,GAAG,MAAMT,QAAQ,CAACC,IAAI,CAAC,CAAD,CAAL,CAA3B;AACAkC,MAAAA,OAAO,CAACC,GAAR,CAAYnC,IAAI,CAAC,CAAD,CAAJ,CAAQoC,IAApB;AACFF,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB3B,MAAtB;AACA,UAAI6B,IAAI,GAAGzC,IAAI,CAAC0C,KAAL,CAAW9B,MAAX,CAAX;AACA0B,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAAClB,IAAL,CAAU,CAAV,EAAa,CAAb,CAAZ;AACC,KA/BkB;;AAEjB,SAAKO,KAAL,GAAa;AACXR,MAAAA,aAAa,EAAE,EADJ;AAEXK,MAAAA,OAAO,EAAE,EAFE;AAGXF,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKD;;AAyBDkB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,SAAS,EAAC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAG,UAAtB;AAAiC,MAAA,MAAM,EAAE,KAAKP,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC;AAAEQ,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,KAAD,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,6CAASD,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,EAEE;AAAQ,MAAA,SAAS,EAAG,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,CADF,CAFJ,CAFF,EAaE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,EAcE;AAAQ,MAAA,SAAS,EAAC,0BAAlB;AAA6C,MAAA,OAAO,EAAE,KAAK5B,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAdF,EAeE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CADF,CAHF,CADF;AA0BD;;AA5DoC;;AA+DvC,eAAeH,cAAf","sourcesContent":["import React, { Component } from 'react'\nimport Dropzone from 'react-dropzone'\nimport axios from 'axios'\nimport './backupDatabase.css'\nconst Papa = require('papaparse')\nvar FileSaver = require('file-saver')\n\nconst readText = file =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.readAsText(file)\n\n    reader.onload = () => resolve(reader.result)\n    reader.onerror = reject\n  })\n\nclass BackupDatabase extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      lisAutoMarker: [],\n      listBus: [],\n      lisSeat: []\n    }\n  }\n\n  exPort = () => {\n    let link = 'http://localhost:8000/getAllDatabase'\n    axios.post(link).then(result => {\n      this.setState({ lisAutoMarker: result.data.listAutoMarker })\n      this.setState({ lisSeat: result.data.listSeat })\n      this.setState({ listBus: result.data.listBus })\n      let lisAutoMarkerCsv = Papa.unparse(this.state.lisAutoMarker)\n      let lisBusCsv = Papa.unparse(this.state.listBus)\n      let listSeatCsv = Papa.unparse(this.state.lisSeat)\n      // FileSaver.saveAs(new Blob([lisBusCsv], { type: 'application/octet-stream' }), 'busdb.csv')\n      FileSaver.saveAs(new Blob([lisAutoMarkerCsv], { type: 'application/octet-stream' }), 'automarkerdb.csv')\n      // FileSaver.saveAs(new Blob([listSeatCsv], { type: 'application/octet-stream' }), 'seatdb.csv')\n    })\n  }\n\n\n  handleOnDrop = async (file, rejectedFiles) => {\n    let result = await readText(file[0])\n    console.log(file[0].name)\n  console.log('result', result)\n  let json = Papa.parse(result)\n  console.log(json.data[0][2])\n  }\n  render() {\n    return (\n      <div className='container'>\n        <h1>Backup Database</h1>\n        <hr />\n        <div>\n          <div className='button' className='row'>\n            <div className='col-sm-4'></div>\n            <Dropzone className = 'col-sm-2' onDrop={this.handleOnDrop}>\n              {({ getRootProps, getInputProps }) => (\n                <section>\n                  <div {...getRootProps()}>\n                    <input {...getInputProps()} />\n                    <button className = 'btn btn-success'>Import Database</button>\n                  </div>\n                </section>\n              )}\n            </Dropzone>\n\n            <div className='col-sm-1'></div>\n            <button className='btn btn-success col-sm-2' onClick={this.exPort}> Export Database </button>\n            <div className='col-sm-3'></div>\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default BackupDatabase"]},"metadata":{},"sourceType":"module"}
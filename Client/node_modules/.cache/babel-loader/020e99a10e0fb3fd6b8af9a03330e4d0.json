{"ast":null,"code":"var _jsxFileName = \"/home/quoctai/Tai/LSH (copy)/Client/src/component/backupDatabase.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './backupDatabase.css';\n\nconst Papa = require('papaparse');\n\nvar FileSaver = require('file-saver');\n\nclass BackupDatabase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = () => {\n      let link = 'http://localhost:8000/getAllDatabase';\n      axios.post(link).then(result => {\n        let config = {\n          delimiter: \"\",\n          // auto-detect\n          newline: \"\",\n          // auto-detect\n          quoteChar: '\"',\n          escapeChar: '\"',\n          header: false,\n          transformHeader: undefined,\n          dynamicTyping: false,\n          preview: 0,\n          encoding: \"\",\n          worker: false,\n          comments: false,\n          step: undefined,\n          complete: undefined,\n          error: undefined,\n          download: '/home/quoctai/tai.csv',\n          downloadRequestHeaders: undefined,\n          skipEmptyLines: false,\n          chunk: undefined,\n          fastMode: undefined,\n          beforeFirstChunk: undefined,\n          withCredentials: undefined,\n          transform: undefined,\n          delimitersToGuess: [',', '\\t', '|', ';', Papa.RECORD_SEP, Papa.UNIT_SEP]\n        };\n        this.setState({\n          lisAutoMarker: result.data.listAutoMarker\n        });\n        this.setState({\n          lisSeat: result.data.listSeat\n        });\n        this.setState({\n          listBus: result.data.listBus\n        });\n        let lisAutoMarkerCsv = Papa.unparse(this.state.lisAutoMarker, config);\n        let lisBusCsv = Papa.unparse(this.state.listBus, config);\n        let listSeatCsv = Papa.unparse(this.state.lisSeat, config);\n        FileSaver.saveAs(new Blob([lisAutoMarkerCsv], {\n          type: 'application/octet-stream'\n        }), 'AutoMarkerDb.csv');\n      });\n    };\n\n    this.state = {\n      lisAutoMarker: [],\n      listBus: [],\n      lisSeat: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Backup Database\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"button\",\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-success col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" Import Database \"), React.createElement(\"div\", {\n      className: \"col-sm-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-success col-sm-2\",\n      onClick: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" Export Database \"), React.createElement(\"div\", {\n      className: \"col-sm-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default BackupDatabase;","map":{"version":3,"sources":["/home/quoctai/Tai/LSH (copy)/Client/src/component/backupDatabase.js"],"names":["React","Component","axios","Papa","require","FileSaver","BackupDatabase","constructor","props","onChange","link","post","then","result","config","delimiter","newline","quoteChar","escapeChar","header","transformHeader","undefined","dynamicTyping","preview","encoding","worker","comments","step","complete","error","download","downloadRequestHeaders","skipEmptyLines","chunk","fastMode","beforeFirstChunk","withCredentials","transform","delimitersToGuess","RECORD_SEP","UNIT_SEP","setState","lisAutoMarker","data","listAutoMarker","lisSeat","listSeat","listBus","lisAutoMarkerCsv","unparse","state","lisBusCsv","listSeatCsv","saveAs","Blob","type","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,WAAD,CAApB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,YAAD,CAAvB;;AAEA,MAAME,cAAN,SAA6BL,SAA7B,CAAuC;AACrCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASrBC,QATqB,GASV,MAAM;AACf,UAAIC,IAAI,GAAG,sCAAX;AACAR,MAAAA,KAAK,CAACS,IAAN,CAAWD,IAAX,EAAiBE,IAAjB,CAAsBC,MAAM,IAAI;AAC9B,YAAIC,MAAM,GAAG;AACXC,UAAAA,SAAS,EAAE,EADA;AACI;AACfC,UAAAA,OAAO,EAAE,EAFE;AAEE;AACbC,UAAAA,SAAS,EAAE,GAHA;AAIXC,UAAAA,UAAU,EAAE,GAJD;AAKXC,UAAAA,MAAM,EAAE,KALG;AAMXC,UAAAA,eAAe,EAAEC,SANN;AAOXC,UAAAA,aAAa,EAAE,KAPJ;AAQXC,UAAAA,OAAO,EAAE,CARE;AASXC,UAAAA,QAAQ,EAAE,EATC;AAUXC,UAAAA,MAAM,EAAE,KAVG;AAWXC,UAAAA,QAAQ,EAAE,KAXC;AAYXC,UAAAA,IAAI,EAAEN,SAZK;AAaXO,UAAAA,QAAQ,EAAEP,SAbC;AAcXQ,UAAAA,KAAK,EAAER,SAdI;AAeXS,UAAAA,QAAQ,EAAE,uBAfC;AAgBXC,UAAAA,sBAAsB,EAAEV,SAhBb;AAiBXW,UAAAA,cAAc,EAAE,KAjBL;AAkBXC,UAAAA,KAAK,EAAEZ,SAlBI;AAmBXa,UAAAA,QAAQ,EAAEb,SAnBC;AAoBXc,UAAAA,gBAAgB,EAAEd,SApBP;AAqBXe,UAAAA,eAAe,EAAEf,SArBN;AAsBXgB,UAAAA,SAAS,EAAEhB,SAtBA;AAuBXiB,UAAAA,iBAAiB,EAAE,CAAC,GAAD,EAAM,IAAN,EAAY,GAAZ,EAAiB,GAAjB,EAAsBnC,IAAI,CAACoC,UAA3B,EAAuCpC,IAAI,CAACqC,QAA5C;AAvBR,SAAb;AAyBA,aAAKC,QAAL,CAAc;AAACC,UAAAA,aAAa,EAAE7B,MAAM,CAAC8B,IAAP,CAAYC;AAA5B,SAAd;AACA,aAAKH,QAAL,CAAc;AAACI,UAAAA,OAAO,EAAEhC,MAAM,CAAC8B,IAAP,CAAYG;AAAtB,SAAd;AACA,aAAKL,QAAL,CAAc;AAACM,UAAAA,OAAO,EAAElC,MAAM,CAAC8B,IAAP,CAAYI;AAAtB,SAAd;AACA,YAAIC,gBAAgB,GAAG7C,IAAI,CAAC8C,OAAL,CAAa,KAAKC,KAAL,CAAWR,aAAxB,EAAuC5B,MAAvC,CAAvB;AACA,YAAIqC,SAAS,GAAGhD,IAAI,CAAC8C,OAAL,CAAa,KAAKC,KAAL,CAAWH,OAAxB,EAAiCjC,MAAjC,CAAhB;AACA,YAAIsC,WAAW,GAAGjD,IAAI,CAAC8C,OAAL,CAAa,KAAKC,KAAL,CAAWL,OAAxB,EAAiC/B,MAAjC,CAAlB;AAEAT,QAAAA,SAAS,CAACgD,MAAV,CAAiB,IAAIC,IAAJ,CAAS,CAACN,gBAAD,CAAT,EAA6B;AAAEO,UAAAA,IAAI,EAAE;AAAR,SAA7B,CAAjB,EAAqF,kBAArF;AACH,OAlCC;AAmCD,KA9CoB;;AAEjB,SAAKL,KAAL,GAAa;AACXR,MAAAA,aAAa,EAAG,EADL;AAEXK,MAAAA,OAAO,EAAE,EAFE;AAGXF,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKD;;AAyCDW,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAG,QAAjB;AAA0B,MAAA,SAAS,EAAG,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAQ,MAAA,SAAS,EAAC,0BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,EAGE;AAAK,MAAA,SAAS,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAQ,MAAA,SAAS,EAAC,0BAAlB;AAA6C,MAAA,OAAO,EAAI,KAAK/C,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJF,EAKE;AAAK,MAAA,SAAS,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,CAHF,CADF;AAgBD;;AAlEoC;;AAqEvC,eAAeH,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\nimport './backupDatabase.css'\nconst Papa = require('papaparse')\nvar FileSaver = require('file-saver')\n\nclass BackupDatabase extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      lisAutoMarker : [],\n      listBus: [],\n      lisSeat: []\n    }\n  }\n\nonChange = () => {\n  let link = 'http://localhost:8000/getAllDatabase'\n  axios.post(link).then(result => {\n    let config = {\n      delimiter: \"\",\t// auto-detect\n      newline: \"\",\t// auto-detect\n      quoteChar: '\"',\n      escapeChar: '\"',\n      header: false,\n      transformHeader: undefined,\n      dynamicTyping: false,\n      preview: 0,\n      encoding: \"\",\n      worker: false,\n      comments: false,\n      step: undefined,\n      complete: undefined,\n      error: undefined,\n      download: '/home/quoctai/tai.csv',\n      downloadRequestHeaders: undefined,\n      skipEmptyLines: false,\n      chunk: undefined,\n      fastMode: undefined,\n      beforeFirstChunk: undefined,\n      withCredentials: undefined,\n      transform: undefined,\n      delimitersToGuess: [',', '\\t', '|', ';', Papa.RECORD_SEP, Papa.UNIT_SEP]\n    }\n    this.setState({lisAutoMarker: result.data.listAutoMarker})\n    this.setState({lisSeat: result.data.listSeat})\n    this.setState({listBus: result.data.listBus})\n    let lisAutoMarkerCsv = Papa.unparse(this.state.lisAutoMarker, config)\n    let lisBusCsv = Papa.unparse(this.state.listBus, config)\n    let listSeatCsv = Papa.unparse(this.state.lisSeat, config)\n    \n    FileSaver.saveAs(new Blob([lisAutoMarkerCsv], { type: 'application/octet-stream' }), 'AutoMarkerDb.csv')\n})\n}\n\n  render() {\n    return (\n      <div className='container'>\n        <h1>Backup Database</h1>\n        <hr />\n        <div>\n          <div className = 'button' className = 'row'>\n            <div className = 'col-sm-4'></div>\n            <button className='btn btn-success col-sm-2'> Import Database </button>\n            <div className = 'col-sm-1'></div>\n            <button className='btn btn-success col-sm-2' onClick = {this.onChange}> Export Database </button>\n            <div className = 'col-sm-3'></div>\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default BackupDatabase"]},"metadata":{},"sourceType":"module"}
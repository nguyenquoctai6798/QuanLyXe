{"ast":null,"code":"var _jsxFileName = \"/home/quoctai/Tai/LSH (copy)/Client/src/component/backupDatabase.js\";\nimport React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';\nimport './backupDatabase.css';\n\nconst Papa = require('papaparse');\n\nvar FileSaver = require('file-saver');\n\nclass BackupDatabase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.exPort = () => {\n      let link = 'http://localhost:8000/getAllDatabase';\n      axios.post(link).then(result => {\n        this.setState({\n          lisAutoMarker: result.data.listAutoMarker\n        });\n        this.setState({\n          lisSeat: result.data.listSeat\n        });\n        this.setState({\n          listBus: result.data.listBus\n        });\n        let lisAutoMarkerCsv = Papa.unparse(this.state.lisAutoMarker);\n        let lisBusCsv = Papa.unparse(this.state.listBus);\n        let listSeatCsv = Papa.unparse(this.state.lisSeat); // FileSaver.saveAs(new Blob([lisBusCsv], { type: 'application/octet-stream' }), 'lisBusCsv.csv')\n\n        FileSaver.saveAs(new Blob([lisAutoMarkerCsv], {\n          type: 'application/octet-stream'\n        }), 'AutoMarkerDb.csv'); // FileSaver.saveAs(new Blob([listSeatCsv], { type: 'application/octet-stream' }), 'lisSeatCsv.csv')\n      });\n    };\n\n    this.imPort = () => {\n      let link = 'http://localhost:8000/readCsvFile';\n      axios.post(link).then(result => {\n        console.log(result);\n      });\n    };\n\n    this.state = {\n      lisAutoMarker: [],\n      listBus: [],\n      lisSeat: []\n    };\n  }\n\n  render() {\n    return React.createElement(Dropzone, {\n      onDrop: acceptedFiles => console.log(acceptedFiles),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Drag 'n' drop some files here, or click to select files\"))));\n  }\n\n}\n\nexport default BackupDatabase;","map":{"version":3,"sources":["/home/quoctai/Tai/LSH (copy)/Client/src/component/backupDatabase.js"],"names":["React","Component","Dropzone","axios","Papa","require","FileSaver","BackupDatabase","constructor","props","exPort","link","post","then","result","setState","lisAutoMarker","data","listAutoMarker","lisSeat","listSeat","listBus","lisAutoMarkerCsv","unparse","state","lisBusCsv","listSeatCsv","saveAs","Blob","type","imPort","console","log","render","acceptedFiles","getRootProps","getInputProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,WAAD,CAApB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,YAAD,CAAvB;;AAEA,MAAME,cAAN,SAA6BN,SAA7B,CAAuC;AACrCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASrBC,MATqB,GASZ,MAAM;AACb,UAAIC,IAAI,GAAG,sCAAX;AACAR,MAAAA,KAAK,CAACS,IAAN,CAAWD,IAAX,EAAiBE,IAAjB,CAAsBC,MAAM,IAAI;AAC9B,aAAKC,QAAL,CAAc;AAACC,UAAAA,aAAa,EAAEF,MAAM,CAACG,IAAP,CAAYC;AAA5B,SAAd;AACA,aAAKH,QAAL,CAAc;AAACI,UAAAA,OAAO,EAAEL,MAAM,CAACG,IAAP,CAAYG;AAAtB,SAAd;AACA,aAAKL,QAAL,CAAc;AAACM,UAAAA,OAAO,EAAEP,MAAM,CAACG,IAAP,CAAYI;AAAtB,SAAd;AACA,YAAIC,gBAAgB,GAAGlB,IAAI,CAACmB,OAAL,CAAa,KAAKC,KAAL,CAAWR,aAAxB,CAAvB;AACA,YAAIS,SAAS,GAAGrB,IAAI,CAACmB,OAAL,CAAa,KAAKC,KAAL,CAAWH,OAAxB,CAAhB;AACA,YAAIK,WAAW,GAAGtB,IAAI,CAACmB,OAAL,CAAa,KAAKC,KAAL,CAAWL,OAAxB,CAAlB,CAN8B,CAO9B;;AACAb,QAAAA,SAAS,CAACqB,MAAV,CAAiB,IAAIC,IAAJ,CAAS,CAACN,gBAAD,CAAT,EAA6B;AAAEO,UAAAA,IAAI,EAAE;AAAR,SAA7B,CAAjB,EAAqF,kBAArF,EAR8B,CAS9B;AACH,OAVC;AAWD,KAtBoB;;AAAA,SAwBrBC,MAxBqB,GAwBZ,MAAM;AACb,UAAInB,IAAI,GAAG,mCAAX;AACAR,MAAAA,KAAK,CAACS,IAAN,CAAWD,IAAX,EAAiBE,IAAjB,CAAsBC,MAAM,IAAI;AAC9BiB,QAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAZ;AACD,OAFD;AAID,KA9BoB;;AAEjB,SAAKU,KAAL,GAAa;AACXR,MAAAA,aAAa,EAAG,EADL;AAEXK,MAAAA,OAAO,EAAE,EAFE;AAGXF,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKD;;AAyBDc,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEC,aAAa,IAAIH,OAAO,CAACC,GAAR,CAAYE,aAAZ,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,CAAC;AAACC,MAAAA,YAAD;AAAeC,MAAAA;AAAf,KAAD,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,6CAASD,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAFF,CADF,CAFF,CADF;AAYD;;AA9CoC;;AAiDvC,eAAe7B,cAAf","sourcesContent":["import React, { Component } from 'react'\nimport Dropzone from 'react-dropzone'\nimport axios from 'axios'\nimport './backupDatabase.css'\nconst Papa = require('papaparse')\nvar FileSaver = require('file-saver')\n\nclass BackupDatabase extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      lisAutoMarker : [],\n      listBus: [],\n      lisSeat: []\n    }\n  }\n\nexPort = () => {\n  let link = 'http://localhost:8000/getAllDatabase'\n  axios.post(link).then(result => {\n    this.setState({lisAutoMarker: result.data.listAutoMarker})\n    this.setState({lisSeat: result.data.listSeat})\n    this.setState({listBus: result.data.listBus})\n    let lisAutoMarkerCsv = Papa.unparse(this.state.lisAutoMarker)\n    let lisBusCsv = Papa.unparse(this.state.listBus)\n    let listSeatCsv = Papa.unparse(this.state.lisSeat)\n    // FileSaver.saveAs(new Blob([lisBusCsv], { type: 'application/octet-stream' }), 'lisBusCsv.csv')\n    FileSaver.saveAs(new Blob([lisAutoMarkerCsv], { type: 'application/octet-stream' }), 'AutoMarkerDb.csv')\n    // FileSaver.saveAs(new Blob([listSeatCsv], { type: 'application/octet-stream' }), 'lisSeatCsv.csv')\n})\n}\n\nimPort = () => {\n  let link = 'http://localhost:8000/readCsvFile'\n  axios.post(link).then(result => {\n    console.log(result)\n  })\n  \n}\n\n  render() {\n    return (\n      <Dropzone onDrop={acceptedFiles => console.log(acceptedFiles)}>\n      {({getRootProps, getInputProps}) => (\n        <section>\n          <div {...getRootProps()}>\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop some files here, or click to select files</p>\n          </div>\n        </section>\n      )}\n    </Dropzone>\n    )\n  }\n}\n\nexport default BackupDatabase"]},"metadata":{},"sourceType":"module"}